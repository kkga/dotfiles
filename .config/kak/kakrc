require-module plug

plug plug https://github.com/alexherbo2/plug.kak %{
    define-command plug-upgrade -docstring 'plug-upgrade' %{
        plug-install
        # plug-execute lsp cargo build --release
    }
}
plug-core %{
    set-option global makecmd 'make -j 8'
}


plug alacritty https://github.com/alexherbo2/alacritty.kak %{
    alias global terminal alacritty-terminal
    alias global popup alacritty-terminal-popup
}



plug terminal-mode https://github.com/alexherbo2/terminal-mode.kak
hook global ModuleLoaded kitty %{
    alias global terminal kitty-terminal
    alias global popup kitty-terminal
}

plug auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{
    auto-pairs-enable
}
plug explore https://github.com/alexherbo2/explore.kak %{
    define-command explore-files -params .. '+ kcr-fzf-files %arg{@}'
    define-command explore-buffers -params .. '+ kcr-fzf-buffers %arg{@}'
}
plug manual-indent https://github.com/alexherbo2/manual-indent.kak %{
    manual-indent-enable
}
plug objectify https://github.com/alexherbo2/objectify.kak
plug text-objects https://github.com/alexherbo2/text-objects.kak
plug jq https://github.com/alexherbo2/jq.kak
plug surround https://github.com/alexherbo2/surround.kak
plug toggle-highlighter https://github.com/alexherbo2/toggle-highlighter.kak
plug palette https://github.com/alexherbo2/palette.kak
plug change-directory https://github.com/alexherbo2/change-directory.kak
plug sleuth https://github.com/alexherbo2/sleuth.kak %{
    sleuth-enable
}
plug current-word-highlighter https://github.com/alexherbo2/current-word-highlighter.kak %{
    current-word-highlighter-enable
}
plug move-line https://github.com/alexherbo2/move-line.kak %{
    map -docstring 'Move selected lines below' global normal <down> ': move-line-below<ret>'
    map -docstring 'Move selected lines above' global normal <up> ': move-line-above<ret>'
}

plug-old kakboard https://github.com/lePerdu/kakboard %{
    hook global WinCreate .* %{ kakboard-enable }
}
plug-old sudo-write https://github.com/occivink/kakoune-sudo-write
plug-old vertical-selection https://github.com/occivink/kakoune-vertical-selection
plug-old buffers https://github.com/Delapouite/kakoune-buffers
plug-old state-save https://gitlab.com/Screwtapello/kakoune-state-save %{
  hook global KakBegin .* %{
    state-save-reg-load colon
    state-save-reg-load pipe
    state-save-reg-load slash
  }
  hook global KakEnd .* %{
    state-save-reg-save colon
    state-save-reg-save pipe
    state-save-reg-save slash
  }
}

evaluate-commands %sh{
    kcr init kakoune
}

# coding ----------------------------------------------------------------------

set-option global grepcmd 'rg --column --with-filename'

eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(crystal|html|css|json|rust|python|go|typescript|svelte|javascript) %{
    lsp-auto-hover-enable
    lsp-auto-hover-insert-mode-enable
    lsp-enable-window
    set-option global lsp_auto_highlight_references true
    set-option global lsp_hover_anchor true
}
hook global KakEnd .* lsp-exit

define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

def -hidden insert-c-n %{
    try %{
        lsp-snippets-select-next-placeholders
        exec '<a-;>d'
    } catch %{
        exec -with-hooks '<c-n>'
    }
}
map global insert <c-n> "<a-;>: insert-c-n<ret>"

# formatting
hook global WinSetOption filetype=(svelte|javascript|typescript|css|scss|json|markdown|yaml|html) %{
    set-option buffer formatcmd "prettier --prose-wrap=always --stdin-filepath='%val{buffile}'"
    hook buffer -group format BufWritePre .* format
}
define-command disable-autoformat -docstring 'disable auto-format' %{
	unset-option buffer formatcmd
	remove-hooks buffer format
}

# linting
hook global WinSetOption filetype=markdown|asciidoc %{
    set-option window lintcmd "proselint"
    # hook buffer -group format BufWritePost .* lint
    # hook buffer -group format InsertIdle .* lint
}
define-command disable-autolint -docstring 'disable auto-lint' %{
	unset-option buffer lintcmd
	remove-hooks buffer lint
}


# mappings ----------------------------------------------------------------------

# jj to exit
hook global InsertChar j %{ try %{
  exec -draft hH <a-k>jj<ret> d
  exec <esc>
}}

# ciao macros: q, w and e are now together
map global normal ^ q
map global normal <a-^> Q

map global normal q b
map global normal Q B
map global normal <a-q> <a-b>
map global normal <a-Q> <a-B>

map global normal b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
map global normal B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'

map global normal -docstring 'format buffer'                 =       ': format<ret>'
map global normal -docstring 'comment line'                  '#'     ': comment-line<ret>'
map global normal -docstring 'comment block'                 '<a-#>' ': comment-block<ret>'

map global goto -docstring 'next paragraph' 				 n       '<esc>]p'
map global goto -docstring 'prev paragraph' 				 p       '<esc>[p'

# options
map global user -docstring 'toggle number-lines'             L      ': toggle-highlighter global/number-lines number-lines -hlcursor<ret>'
map global user -docstring 'toggle wrap'                     W      ': toggle-highlighter global/wrap wrap -word<ret>'

# clipboard
# map global user -docstring 'clip-paste (before)'             p      'o<esc>!wl-paste|dos2unix<ret><a-d>'
# map global user -docstring 'clip-paste (after)'              P      'O<esc><a-!>wl-paste|dos2unix<ret><a-d>'
# map global user -docstring 'clip-replace'                    R      '|wl-paste|dos2unix<ret>'
# map global user -docstring 'clip-yank'                       y      '<a-|>wl-copy<ret>'

# buffer
map global user -docstring 'save buffer'                     w      ': w<ret>'
map global user -docstring 'close buffer'                    c      ': db<ret>'
map global user -docstring 'kill buffer'                     C      ': db!<ret>'
map global user -docstring 'save all and exit'               q      ': waq<ret>'
map global user -docstring 'exit without save'               Q      ': q!<ret>'

# search
map global user -docstring 'buffers'                         b      ': explore-buffers<ret>'
map global user -docstring 'files'                           f      ': explore-files<ret>'
map global user -docstring 'configs'                         e      ': explore-files /home/kkga/.config/<ret>'
map global user -docstring 'notes'                           n      ': explore-files /home/kkga/notes/<ret>'
map global user -docstring 'grep'                            g      ': + kcr-fzf-grep<ret>'
map global user -docstring 'grep buffer'                     G      ': + kcr-fzf-grep %val{buffile}<ret>'
map global user -docstring 'grep notes'                      N      ': + kcr-fzf-grep /home/kkga/notes/<ret>'

# tools
map global user -docstring 'surround'                        s      ': enter-user-mode surround<ret>'
map global user -docstring 'select down'                     V      ': vertical-selection-down<ret>'
map global user -docstring 'select up'                       <a-v>  ': vertical-selection-up<ret>'
map global user -docstring 'select up and down'              v      ': vertical-selection-up-and-down<ret>'
map global user -docstring 'disable autoformat'              d      ': disable-autoformat<ret>'
map global user -docstring 'LSP mode'                        l      ': enter-user-mode lsp<ret>'
# map global user -docstring 'codepoint'                     i      ': echo %sh{ printf "codepoint: U+%04x" "$kak_cursor_char_value" }<ret>'

# autocomplete with tab
hook global InsertCompletionShow .* %{ map window insert <tab> <c-n> }
hook global InsertCompletionHide .* %{ map window insert <tab> <tab> }
hook global InsertCompletionShow .* %{ map window insert <s-tab> <c-p> }


# ui ----------------------------------------------------------------------

colorscheme lucius-custom

set-option global tabstop 4
set-option global indentwidth 4
set-option global scrolloff 8,4
set-option global ui_options ncurses_status_on_top=true ncurses_assistant=none

# add-highlighter global/ number-lines -hlcursor
add-highlighter global/ regex \h+$ 0:Error
add-highlighter global/ wrap -word -indent
add-highlighter global/ show-matching
add-highlighter global/ regex \b(TODO|FIXME|XXX|NOTE)\b 0:default+rb
add-highlighter global/ regex @\b(todo|fixme|xxx|note)\b 0:default+rb

# modeline
define-command update-status %{ evaluate-commands %sh{
    printf %s 'set-option buffer modelinefmt %{'
    if [ "$kak_opt_lsp_diagnostic_error_count" -ne 0 ]; then
        printf %s '{DiagnosticError}*%opt{lsp_diagnostic_error_count}{default} '
    fi
    if [ "$kak_opt_lsp_diagnostic_warning_count" -ne 0 ]; then
        printf %s '{DiagnosticWarning}!%opt{lsp_diagnostic_warning_count}{default} · '
    fi
    printf %s ' %sh{pwd | sed "s|^$HOME|~|"}'
    printf %s ' · %val{bufname} [%opt{filetype}]'
    printf %s ' · %val{cursor_line}:%val{cursor_char_column}/%val{buf_line_count}'
    printf %s ' {{context_info}} {{mode_info}}'
    # printf %s " · {green}$kak_client{default}@{cyan}$kak_session"
    # case "$kak_client" in client*) ;; *) printf %s " · $kak_client";; esac
    # case "$kak_session" in ''|*[!0-9]*) printf %s " @$kak_session";; esac
    printf %s '}'
}}
hook global WinDisplay .* update-status
hook global BufSetOption lsp_diagnostic_error_count=.* update-status
hook global BufSetOption lsp_diagnostic_warning_count=.* update-status

# evaluate-commands %sh{
#     lsp_errors='{DiagnosticError}*%opt{lsp_diagnostic_error_count}{default}'
#     lsp_warnings='{DiagnosticWarning}!%opt{lsp_diagnostic_warning_count}{default}'
#     cwd='at {cyan}%sh{ pwd | sed "s|^$HOME|~|" }{default}'
#     bufname='in {green}%val{bufname}{default}'
#     modified='{blue+b}%sh{ $kak_modified && echo "[+] " }{default}'
#     ft='as {magenta}%sh{ echo "${kak_opt_filetype:-noft}" }{default}'
#     # eol='with {yellow}%val{opt_eolformat}{default}'
#     cursor='on {cyan}%val{cursor_line}{default}:{cyan}%val{cursor_char_column}{default}'
#     readonly='{red+b}%sh{ [ -f "$kak_buffile" ] && [ ! -w "$kak_buffile" ] && echo "[] " }{default}'
#     echo set global modelinefmt "'${lsp_errors} ${lsp_warnings} {{mode_info}} ${cwd} ${bufname} ${readonly}${modified}${ft} ${cursor}'"
# }

# buffers
hook global WinDisplay .* info-buffers
alias global bd delete-buffer
alias global bf buffer-first
alias global bl buffer-last
alias global bo buffer-only
alias global bo! buffer-only-force


