@BaseClass color(255 255 40) = Light[
	delay(choices) : "Attenuation"  = [
		1 : "Inverse distance falloff"
		2 : "Inverse distance squared"
		5 : "Inverse distance squared B"
		0 : "Linear falloff (Default)"
		4 : "Local minlight"
		3 : "No falloff"
	]
	light(integer) : "Brightness"  : 300
	mangle(string) : "Spotlight angle"  : "0 0 0"
	wait(integer) : "Fade distance multiplier"  : 1
]

@SolidClass = detail : "Detail Brush" [
]

@SolidClass = group : "Brush Group" [
]

@SolidClass = hidden : "non-buildable geometry" [
]

@SolidClass = illusionary : "Non-colliding Brush" [
]

@SolidClass = passage : "a passage that's removed during build" [
	direction(string) : ""  : ""
]

@SolidClass = trigger : "Trigger Volume" [
]

@SolidClass = wall : "a wall that's removed during build" [
	direction(string) : ""  : ""
]

@SolidClass = worldspawn : "World Entity" [
]

@PointClass color(255 0 0) size(-8 -8 -16, 16 16 32) = agent_hitscan : "Hitscan Enemy" [
]

@PointClass color(255 146 0) size(-16 -4 0, 16 4 48) = door[
	needs_key(string) : ""  : "false"
]

@PointClass color(255 0 0) size(-16 -4 0, 16 4 32) = Exit : "Finishes current level when interacted" [
]

@PointClass base(Light) size(-8 -8 -8, 8 8 8) = light : "Invisible light source" [
	angle(float) : "Rotation Angle"  : 0
]

@PointClass color(233 255 0) size(-8 -8 -8, 8 8 8) = key[
]

@PointClass color(24 104 3) size(-8 -8 -8, 8 8 8) = spawner_medkit[
]

@PointClass color(0 199 255) size(-8 -8 0, 8 8 32) = spawner_player : "Spawns the player. Should only be used in -start- modules." [
]
